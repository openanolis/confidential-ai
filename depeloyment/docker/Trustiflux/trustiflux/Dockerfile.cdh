# Copyright (c) 2024 by Alibaba.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

ARG BASE_IMAGE=debian:stable-slim

ARG TRUSTEE_ADDR
ARG CDH_KEY_ID

FROM ${BASE_IMAGE} AS builder

ARG CODE_BASE=https://github.com/confidential-containers/guest-components.git
ARG REV=5fba45c

WORKDIR /usr/src

RUN printf '\
    # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释\n\
    deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\n\
    # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware\n\
    deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\n\
    # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware\n\
    deb http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\n\
    # deb-src http://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware\n\
    # 以下安全更新软件源包含了官方源与镜像站配置，如有需要可自行修改注释切换\n\
    deb http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware\n\
    # deb-src http://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware\n\
    ' > /etc/apt/sources.list

RUN apt update -y && apt install -y clang protobuf-compiler git curl make musl-tools libssl-dev && \
    apt clean all && \
    rm -rf /tmp/*

# Install Rust
RUN export RUSTUP_DIST_SERVER='https://mirrors.ustc.edu.cn/rust-static' && \
    export RUSTUP_UPDATE_ROOT='https://mirrors.ustc.edu.cn/rust-static/rustup' && \
    curl --proto '=https' --tlsv1.2 -sSf https://mirrors.aliyun.com/repo/rust/rustup-init.sh | \
    sh  -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
RUN export RUSTUP_DIST_SERVER='https://mirrors.ustc.edu.cn/rust-static' && \
    export RUSTUP_UPDATE_ROOT='https://mirrors.ustc.edu.cn/rust-static/rustup' && \
    rustup target add x86_64-unknown-linux-musl
RUN printf '\
    [source.crates-io]\n\
    replace-with = "aliyun"\n\
    [source.aliyun]\n\
    registry = "sparse+https://mirrors.aliyun.com/crates.io-index/"\n\
    ' > ~/.cargo/config

# Build confidential-data-hub
RUN git clone ${CODE_BASE} && cd guest-components && \
    git reset --hard ${REV} && \
    cd confidential-data-hub/hub && \
    cargo build --release --bin cdh-oneshot --no-default-features --features "bin,kbs" --target x86_64-unknown-linux-musl

RUN strip /usr/src/guest-components/target/x86_64-unknown-linux-musl/release/cdh-oneshot

FROM ${BASE_IMAGE}

# Copy binaries
COPY --from=builder /usr/src/guest-components/target/x86_64-unknown-linux-musl/release/cdh-oneshot /usr/local/bin/confidential-data-hub
COPY cdh-start.sh /usr/bin/start.sh