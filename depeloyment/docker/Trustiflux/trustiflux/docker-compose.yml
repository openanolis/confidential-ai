services:
  attestation-agent:
    # build:
    #   dockerfile: Dockerfile.aa
    image: confidential-ai-registry.cn-shanghai.cr.aliyuncs.com/product/attestation-agent:0.0.2
    environment:
      - RUST_LOG=debug
      - TRUSTEE_ADDR=${TRUSTEE_ADDR}
      - AS_ADDR=${TRUSTEE_ADDR}/as/
    volumes:
      - attestation-agent-sock:/run/confidential-containers/attestation-agent/
    devices:
      - /dev/tdx_guest
    privileged: true
    cap_add:
      - NET_ADMIN
    network_mode: host
    init: true
    command: [ "sh", "-c", "start.sh --trustee-addr ${TRUSTEE_ADDR} --as-addr ${TRUSTEE_ADDR}/as/" ]
    healthcheck:
      test: [ "CMD-SHELL", "ss -n --listen | grep /run/confidential-containers/attestation-agent/attestation-agent.sock" ]
      interval: 3s
      start_period: 0s
      start_interval: 3s
      retries: 5
      timeout: 5s

  confidential-data-hub:
    # build:
    #   dockerfile: Dockerfile.cdh
    image: confidential-ai-registry.cn-shanghai.cr.aliyuncs.com/product/confidential-data-hub:0.0.2
    environment:
      - TRUSTEE_ADDR=${TRUSTEE_ADDR}
      - CDH_KEY_ID=kbs:///${KBS_KEY_PATH}
    volumes:
      - attestation-agent-sock:/run/confidential-containers/attestation-agent/
      - decryption-key:/tmp/gocryptfs-decryptionkey
    network_mode: host
    init: true
    command:
      - start.sh
      - --trustee-addr
      - ${TRUSTEE_ADDR}
      - --key-id
      - kbs:///${KBS_KEY_PATH}
      - --resource-path
      - /tmp/gocryptfs-decryptionkey/key
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /tmp/gocryptfs-decryptionkey/key ]" ]
      interval: 10s
      start_period: 0s
      start_interval: 3s
      retries: 5
      timeout: 5s
    depends_on:
      attestation-agent:
        condition: service_healthy
  
  tng:
    image: confidential-ai-registry.cn-shanghai.cr.aliyuncs.com/product/tng:1.0.2
    volumes:
      - attestation-agent-sock:/run/confidential-containers/attestation-agent/
    cap_add:
      - NET_ADMIN
    network_mode: host
    command:
    - tng
    - launch
    - --config-content
    - |
      {
        "add_egress": [
          {
            "mapping": {
              "in": {
                "host": "0.0.0.0",
                "port": 41000
              },
              "out": {
                "host": "0.0.0.0",
                "port": 9000
              }
            },
            "attest": {
              "aa_addr": "unix:///run/confidential-containers/attestation-agent/attestation-agent.sock"
            }
          }
        ]
      }
    # healthcheck:
    #   test: ["CMD-SHELL", "curl http://0.0.0.0:41000/tng/v1/healthcheck"]
    #   interval: 3s
    #   timeout: 5s
    #   start_period: 20s
    #   start_interval: 3s
    #   retries: 5
    depends_on:
      attestation-agent:
        condition: service_healthy
        restart: false

  gocryptfs:
    # build:
    #   dockerfile: Dockerfile.gocryptfs
    image: confidential-ai-registry.cn-shanghai.cr.aliyuncs.com/dev/test:trustiflux-gocryptfs-v0.1.0
    environment:
      - MODEL_TYPE=${MODEL_TYPE}
    volumes:
      - /tmp/encrypted-model:/tmp/encrypted-model:shared
      - /tmp/plaintext-model:/tmp/plaintext-model:shared
      - decryption-key:/tmp/gocryptfs-decryptionkey
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    network_mode: host
    init: true
    command:
      - start.sh
    healthcheck:
      test: [ "CMD-SHELL", "mount | grep /tmp/plaintext-model" ]
      interval: 10s
      start_period: 0s
      start_interval: 3s
      retries: 5
      timeout: 5s
    depends_on:
      confidential-data-hub:
        condition: service_healthy
        restart: true
      # tng:
      #   condition: service_healthy
      #   restart: false

  app:
    build:
      context: ../app
      dockerfile: Dockerfile
    ports:
      - "9000:7860"  # 宿主机端口:容器端口
    volumes:
      - /tmp/plaintext-model:/app/text-generation-webui/models/:shared
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    restart: unless-stopped
    depends_on:
      - tng
      # tng:
      #   condition: service_healthy
      #   restart: false

volumes:
  attestation-agent-sock:
  decryption-key:
